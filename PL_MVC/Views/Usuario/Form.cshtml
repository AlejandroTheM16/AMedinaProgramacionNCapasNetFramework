@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>

<h2>Form</h2>

<div class="row">
    <div class="container">
        <div class="col-md-12">
            <h2>Usuario</h2>
            <h5>Ingrese los datos del usuario:</h5>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @*Crea un salto de linea*@
            <hr />
        </div>
    </div>
    

    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="hidden">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Id_Usuario)
                        @Html.TextBoxFor(model => model.Id_Usuario, new { @class = "form-control", @id = "txtIdUsuario" })
                        @Html.ValidationMessageFor(model => model.Id_Usuario)

                    </div>
                </div>


                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-user"></span>
                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                        @Html.ValidationMessageFor(model => model.Nombre)

                    </div>
                </div>


                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-user"></span>
                        @Html.LabelFor(model => model.ApellidoPaterno)
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-user  "></span>
                        @Html.LabelFor(model => model.ApellidoMaterno)
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                       <span class="glyphicon glyphicon-question-sign"></span>
                        @Html.LabelFor(model => model.Genero)
                        @Html.TextBoxFor(model => model.Genero, new { @class = "form-control", @id = "txtGenero" })
                        @Html.ValidationMessageFor(model => model.Genero)

                    </div>
                </div>
  

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-envelope"></span>
                        @Html.LabelFor(model => model.Correo)
                        @Html.TextBoxFor(model => model.Correo, new { @class = "form-control", @id = "txtEmail" })
                        @Html.ValidationMessageFor(model => model.Correo)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-phone"></span>
                        @Html.LabelFor(model => model.Telefono)
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono" })
                        @Html.ValidationMessageFor(model => model.Telefono)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-calendar"></span>
                        @Html.LabelFor(model => model.FechaNacimiento)
                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "txtFechaNacimiento" })
                        @Html.ValidationMessageFor(model => model.FechaNacimiento)

                    </div>
                </div>


                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        @Html.LabelFor(model => model.Rol.IdRol)
                        @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Rols, "IdRol", "Nombre"), "Selecciona un rol correspondiente", new { @class = "form-control", @id = "ddlRol" })
                        @Html.ValidationMessageFor(model => model.Rol.IdRol)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-user"></span>
                        @Html.LabelFor(model => model.UserName)
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtUsername" })
                        @Html.ValidationMessageFor(model => model.UserName)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-eye-close"></span>
                        @Html.LabelFor(model => model.Password)
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtPass" })
                        @Html.ValidationMessageFor(model => model.Password)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-hand-right"></span>  
                        @Html.LabelFor(model => model.CURP)
                        @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtCURP" })
                        @Html.ValidationMessageFor(model => model.CURP)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">                        
                        @Html.LabelFor(model => model.Direccion.Calle)
                        @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtCalle" })
                        @Html.ValidationMessageFor(model => model.Direccion.Calle)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-asterisk"></span>
                        @Html.LabelFor(model => model.Direccion.NumeroInterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNumeroInterior" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)

                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        <span class="glyphicon glyphicon-asterisk"></span>
                        @Html.LabelFor(model => model.Direccion.NumeroExterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNumeroExterior" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)

                    </div>
                </div>

                <div class="col-md-3">
                    <span class="glyphicon glyphicon-globe"></span>
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)
                    @if (Model.Direccion.Colonia.Municipio.Estado.Pais.Paises == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(string.Empty, "Value", "Text"), "Selecciona un pais", new { @class = "form-control", @id = "ddlPais" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.Paises)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un pais", new { @class = "form-control", @id = "ddlPais" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                    }
                </div>

                <div class="col-md-4">
                    <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un estado", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un estado", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                </div>

                <div class="col-md-4">
                    <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                    @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                </div>

                <div class="col-md-4">
                    <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                    @Html.LabelFor(model => model.Direccion.Colonia.IdColonia)
                    @if (Model.Direccion.Colonia.Colonias == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una colonia", new { @class = "form-control", @id = "ddlColonia" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una colonia", new { @class = "form-control", @id = "ddlColonia" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                </div>



                <div class="col">
                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>

            }


        </div>
    </div>    

</div>


<script>
    $(document).ready(function () {
                //Se ejecuta cuando realizamos un cambio en el DDL Plantel
                $("#ddlPais").change(function () {
                    $("#ddlEstado").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("EstadoGetByIdPais")',
                        dataType: 'json',
                        data: { IdPais: $("#ddlPais").val() },
                        success: function (estados) {
                            $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(estados, function (i, estados) {
                                $("#ddlEstado").append('<option value="'
                                                           + estados.IdEstado + '">'
                                                           + estados.Nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });
                // Si estado Estado
                $("#ddlEstado").change(function () {
                    $("#ddlMunicipio").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("MunicipioGetByIdEstado")',
                        dataType: 'json',
                        data: { IdEstado: $("#ddlEstado").val() },
                        success: function (municipios) {
                            $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                            $.each(municipios, function (i, municipios) {
                                $("#ddlMunicipio").append('<option value="'
                                                           + municipios.IdMunicipio + '">'
                                                           + municipios.Nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });
                //Colonia
                $("#ddlMunicipio").change(function () {
                    $("#ddlColonia").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("ColoniaGetByIdMunicipio")',
                        dataType: 'json',
                        data: { IdMunicipio: $("#ddlMunicipio").val() },
                        success: function (colonias) {
                            $("#ddlColonia").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(colonias, function (i, colonias) {
                                $("#ddlColonia").append('<option value="'
                                                           + colonias.IdColonia + '">'
                                                           + colonias.Nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });
            });
</script>